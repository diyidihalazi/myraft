syntax = "proto3";
package raftpb;

enum EntryType {
	EntryNormal     = 0;
	EntryConfChange = 1;
}

message Entry {
	uint64     Term  = 2; // must be 64-bit aligned for atomic operations
	uint64     Index = 3; // must be 64-bit aligned for atomic operations
	EntryType  Type  = 1;
	bytes      Data  = 4;
}

message SnapshotMetadata {
	ConfState ConfState  = 1;
	uint64    Index      = 2;
	uint64    Term       = 3;
}

message Snapshot {
	bytes            Data     = 1;
	SnapshotMetadata Metadata = 2;
}

enum MessageType {
	MsgHup             = 0 ;
	MsgBeat            = 1 ;
	MsgProp            = 2 ;
	MsgApp             = 3 ;
	MsgAppResp         = 4 ;
	MsgVote            = 5 ;
	MsgVoteResp        = 6 ;
	MsgSnap            = 7 ;
	MsgHeartbeat       = 8 ;
	MsgHeartbeatResp   = 9 ;
	MsgUnreachable     = 10;
	MsgSnapStatus      = 11;
	MsgCheckQuorum     = 12;
	MsgTransferLeader  = 13;
	MsgTimeoutNow      = 14;
	MsgReadIndex       = 15;
	MsgReadIndexResp   = 16;
	MsgPreVote         = 17;
	MsgPreVoteResp     = 18;
}

message Message {
	MessageType    Type        = 1 ;
	uint64         To          = 2 ;
	uint64         From        = 3 ;
	uint64         Term        = 4 ;
	uint64         LogTerm     = 5 ;
	uint64         Index       = 6 ;
	repeated Entry Entries     = 7 ;
	uint64         Commit      = 8 ;
	Snapshot       Snapshot    = 9 ;
	bool           Reject      = 10;
	uint64         RejectHint  = 11;
	bytes          Context     = 12;
}

message HardState {
	uint64 Term   = 1;
	uint64 Vote   = 2;
	uint64 Commit = 3;
}

message ConfState {
	repeated uint64 Nodes    = 1;
	repeated uint64 Learners = 2;
}

enum ConfChangeType {
	ConfChangeAddNode        = 0;
	ConfChangeRemoveNode     = 1;
	ConfChangeUpdateNode     = 2;
	ConfChangeAddLearnerNode = 3;
}

message ConfChange {
	uint64          ID      = 1;
	ConfChangeType  Type    = 2;
	uint64          NodeID  = 3;
	bytes           Context = 4;
}
